1.常见的数据库软件
	a.关系型
		oracle
		mysql
		sqlserver
	b.非关系型
		mongodb   大数据、爬虫
		redis     验证信息、消息队列  
		cassandra facebook
2.mysql的下载和安装
	a.官网下载
		a1.操作系统类型
			unix
			linux
			windows
		a2.操作系统位数
			32位   i386 i686  x86
			64位   x86_64 x64
		a3.mysql的版本
	b.集成软件安装(阉割版)
		xampp
		wamp
		phpstudy
	c.安装:傻瓜安装
3.mysql的服务
	c/s架构软件
	客户端 ------------------/-------------服务器
	mysql                                 mysqld
	a.检查服务
		tasklist | find "mysqld"
	b.检查端口
		mysql端口  3306
		netstat -an | find "3306"
4.mysql的登陆服务
	a.mysql的登陆命令(命令提示符)
		mysql
			登陆本地数据库
		mysql -u root -p
			管理员登陆本地数据库
				-u 用户
				-p 输入密码
		mysql -h 127.0.0.1 -u root -p
			管理员登陆IP位127.0.0.1的数据库
				-h 需要远程链接的IP
	b.登陆方式
		b1.进入到命令所在文件夹
			F:
			cd phpStudy\MySQL\bin
		b2.设置环境变量
			让系统找到可执行的命令
			计算机--属性--高级--环境变量--系统变量--Path中添加
			;mysql的bin文件夹的路径
			确定--确定--确定
5.基础命令
	常说的数据库分为2部分(数据库软件，数据库数据)
	mysql数据库是由表组成
	mysql的表是由数据组成
	mysql的管理员root
	a.常见命令
		show databases;
			查看当前软件中有哪些数据库(名字)
		select database();
			查看当前数据库的名字
			null(空)，没有选择任何数据库
		use test;
			设置当前数据库为test
		show tables;
			查看当前数据库有哪些表
		select * from ecs_goods\G
		select * from ecs_goods
			查看表名为ecs_goods的所有数据
6.SQL(结构化查询语言)
	DDL 数据库定义语言  create alter drop truncate
	DML 数据库操作语言  insert delete update
	DCL 数据库控制语言  grant revoke
	DQL 数据库查询语言  select

7.表结构
	a.数据类型
		数字  123 456         int
		字符  'abc' '123'     char varchar
		日期  '1988-01-01'    date
	b.创建表结构
		语法:
		create table 表名(
				列、字段  数据类型,
				列、字段  数据类型,
				。。。
		);
		最后一个列是没有逗号，列和列之间通过逗号分开
		需求:创建表商品(goods),3个列，商品名称(name) 字符类型，价格(price) 数字类型，生产日期(ddate) 日期类型
		create table goods (
			name char(20),
			price int,
			ddate date
		);
		需求:创建员工表(emp),员工名字(ename),员工薪资(sal) 数字类型
		create table emp(
			ename char(10),
			sal int
			);

		补充:常见的msyql管理工具
			SQLyog(小海豚)
			mysqlworkbech
			navicat
			toad
			dbeaver
			phpmyadmin
	c.查看表结构
		desc 表名
		需求:查看goods表表结构
		desc goods
	d.修改表结构
		新增列
			需求:goods表中新增商品id(id) 数字类型
			alter table goods add id int;
		修改列
			需求:goods表中id列修改为char类型
			alter table goods modify id char(10);
		删除列
			需求:删除goods表中的id列
			alter table goods drop column id;
	e.删除表结构
		删除数据和表结构
		语法:drop table 表名;
			需求:删除韩国表
				drop table 韩国;
	f.约束
		主键 列中的数据是唯一的，不能为空，每张表中只能有一个
		唯一 列中的数据是唯一的，可以为空，表中可以有多个，作为主键约束的补充
		非空 列中的数据不能为空
		检查 列中的数据是否满足条件
		外键 列中的数据依赖于另外一张表的列
		语法
		create table 表 (
			列 数据类型 primary key,    #主键约束
			列 数据类型 unique,         #唯一约束
			列 数据类型 not null,       #非空约束
			列 数据类型 check(检查条件), #检查约束
			列 数据类型 references 被参考表(被参考列) #外键约束
		)
		外键约束需要注意:
		1.被参考表的被参考列一定是存在
		2.参考列和被参考列的数据类型必须一致
		3.被参考列一定是主键约束

8.DML操作(insert update delete)
	a.数据的新增
		字符类型数据需要加单引号
		数字类型数据直接使用
		日期类型数据需要加单引号
		列和值的数据类型必须一致
		a1.向表中指定列新增数据
			语法:insert into 表(列1,列2) values(值1,值2);
			需求:向goods表中新增数据，商品名称memeda，价格200
				insert into goods(name,price) values('memeda',200);
			除了指定新增列外的列，默认都为空
		a2.向表中所有列新增数据
			语法:insert into 表 values(值1,值2)
			需求:向goods表中新增数据，商品名称3pang，价格290，出厂日期 2000-01-01，id是10
			insert into goods values('3pang',290,'2000-01-01',10);
	b.数据的修改
		语法:update 表 set 列=值 where 条件;
		如果不增加where条件，默认修改的是整个列的数据，如果增加 where修改的是指定行的列
		需求:
			修改goods表中名字是memeda的售价为3000
			update goods set price=3000 where dname='memeda';
			修改goods表中所有商品价格为0
			update goods set price=0
	c.数据的删除
		delete    可以删除指定数据，DML，删除数据可以找回
		语法：delete from 表 where 条件
			如果不加where删除的是整张表的数据
			如果增加where删除的是指定数据
			需求:删除goods表中名字是memeda的所有信息
				delete from goods where dname='memeda';
			需求:删除goods表中所有数据
				delete from goods;
		truncate  只能删除所有数据，DDL，删除数据无法找回,序列的初始化
		语法:truncate table 表;
			需求:删除goods表中所有数据
			truncate table goods;
9.数据的查询
	a.查询的分类
		简单查询(单表查询)
		多表查询
		分组查询
		子查询
	b.简单查询
		https://blog.csdn.net/weixin_37678117/article/details/81192245
		语法:select 列 from 表 where 条件;
		查询可以查询指定列，指定行，指定行的列，所有数据
		*代表所有列
		需求:查询ecs_goods表中所有的数据
		select * from ecs_goods;
		需求:查询ecs_goods表中所有商品的名称
		select goods_name from ecs_goods;
		需求:查询ecs_goods表中商品名称为KD876的所有信息
		select * from ecs_goods where goods_name='KD876';
		需求:查询ecs_goods表中商品名称为KD876的本店售价
		select shop_price from ecs_goods where goods_name='KD876';
	c.where子句
		c1.比较
			>
			<
			=
			>=
			<=
			!=
			<>
			需求:查询ecs_goods表中本店售价高于2000的所有商品名称
				select goods_name from ecs_goods where shop_price>2000;
				查询ecs_goods表中商品名称不是KD876的所有信息
				select * from ecs_goods where goods_name<>'KD876';
		c2.关系
			and  同时满足
			or   满足一个即可
			not  不满足
			需求:查询商品名称是KD876的或者本店售价低于1000的所有商品信息
				select * from ecs_goods where goods_name='KD876' or shop_price<1000;
				查询商品的本店售价高于1000并且低于2000的所有商品信息
				select * from ecs_goods where shop_price>1000 and shop_price<2000;
		c3.区间
			包括两个端点，通常是范围
			between...and...
			需求:查询ecs_goods表中本店售价范围1000-1999之间的所有信息
				select * from ecs_goods where shop_price>=1000 and shop_price<=1999;
				select * from ecs_goods where shop_price between 1000 and 1999;
		c4.空值
			没有任何数据类型，没有任何值,空值不能用于比较和运算，查询时候使用is null或者is not null
			需求:查询ecs_goods表中suppliers_id为非空的所有信息
				select * from ecs_goods where suppliers_id is not null;
		c5.模糊查询
			当信息不完整时候使用，通常和字符串类型一起使用
			like
			_     一个字符
			%     任意个字符
			需求:查询ecs_goods表中商品名称是诺基亚开头的所有信息
				select * from ecs_goods where goods_name	like '诺基亚%';
				查询ecs_goods表中商品名称是6结尾的所有信息
				select * from ecs_goods where goods_name like '%6';
				查询ecs_goods表中商品名称是6个字符的
				select * from ecs_goods	where goods_name like '______';
		c6.in 在...里面
			或者的关系
			需求:查询ecs_goods表中商品名称是诺基亚的或者kd876的所有信息
			select * from ecs_goods where goods_name='诺基亚' or goods_name='KD876';
			select * from ecs_goods where goods_name in ('诺基亚','KD876');
		c7.常用函数
			upper()   大写
			lower()   小写
			select goods_name,lower(goods_name),upper(lower(goods_name)) from ecs_goods;
			round()   小数点保留几位
			avg()     平均值
			select avg(shop_price),round(avg(shop_price),2) from ecs_goods;














