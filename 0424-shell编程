1.条件判断
	test 命令，可以通过man test查看判断的语法
	条件判断在脚本中使用if关键字
	test 等价于[]
	a.语法结构
		-------------------
		if [ 判断条件 ];then
			执行语句
		fi
		-------------------
		if [ 判断条件 ];then
			执行语句1
		else
			执行语句2
		fi
		-------------------
		if [ 判断条件 ];then
			执行语句1
		elif [ 判断条件 ];then
			执行语句2
		...
		else
			执行语句x
		fi
		-------------------
	b.必须掌握判断的参数
		-f 
			test -f /etc/inittab   条件成立，返回码$?=0
			test -f /etc           条件不成立，返回码$?=1
			[ -f /etc/passwd ]
		-e  不管文件还是目录，只要存在条件就成立
		-n  只要字符串非空，就是成立
		-z  字符串长度为0，就成立
		！  结果取反
		字符串的比较 = ,！= ,不能用于数值大小的比较
		数值的判断  -eq，-ne，-lt，-gt ，-ge
		逻辑判断符号
			-a  and 逻辑与
			-o  or  逻辑或
			[ 条件1 -a 条件2 ] 只有两个条件都成立，整个大条件才能成立
			[ 条件1 -o 条件2 ] 只要其中一个条件成立，整个大条件就成立
2.循环操作
	ping 服务器集群(一堆IP)
	批量创建用户  user1-user100
	a.for
	b.while
	c.跳出循环
		continue 跳出本次循环
		break    跳出整个循环
3.awk
	先行文本处理工具
	可以在文本数据进行字段分割和重组
	默认是以空格或者连续空格作为分割符号
	a.获取linux的IP地址
		 ifconfig eth0 |grep Mask |awk -F " " '{print $2}'|awk -F ":" '{ print $2}'
	b.打印所有行
		awk -F ":" '{ print }' passwd
	c.打印第一列
		查看系统中有哪些用户
		cut -d: -f1 passwd
		awk -F ":" '{ print $1}' passwd
	d.打印多个列
		awk -F ":" '{ print $1,$3}' passwd
		awk -F ":" '{ print $1":"$3}' passwd
	e.把所有ssh登录失败的记录的IP都打印出来
		lastb -i|grep ssh |awk '{ print $3}'|uniq -c
	f.打印每行的最后一列
		$NF  最后一列
		awk -F ":" '{print $NF }' passwd |uniq
		/bin/bash     用户可以登录系统进行操作
		/sbin/nologin 用户可以在系统中运行程序，但是不能登录
	g.打印每行的字段数(每行有多少列)
		NF 列的数量
		awk -F ":" '{ print NF }' passwd
	h.运算符
		+
		-
		*
		/
		%
		++
		--
		echo  |awk '{ print 2^3}'
	i.关系运算符
		&&  逻辑与
		||  逻辑或
		！  逻辑非
	j.打印行号
		简单的条件判断NR代表行号
		awk -F ":" '{print NR,$1 }' passwd
		awk -F ":" 'NR==8{ print }' passwd
		原理:虽然打印的是第八行但是前七行awk一样读取，只是没有打印
		打印字段数量大于6的行
		awk -F ":" 'NF>3{ print }' passwd
		打印uid在30-40之间的用户名
		awk -F ":" '$3>=30&&$3<=40{ print }' passwd
		隔行打印
		awk 'NR%2==0{ print }' passwd








