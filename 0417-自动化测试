1.自动化测试理论
	a.什么是自动化
		没有人和比较少人参与下，按照人的要求自动监测，信息处理，分析判断，模拟控制，实现预期目标
	b.自动化测试
		包含单元测试、接口测试、UI测试，主要编写代码、脚本，让软件自动运行，发现缺陷，代替部分手工测试
	c.自动化测试发展趋势
		在更多的浏览器种进行，越来越多人使用最新版本
		真实设备和模拟器成为移动端测试新标准
		自动化测试价值明显
		敏捷和DevOps使用较多，bug修复速度没有更快
			敏捷开发:
				强调程序员和业务之间的协作，面对面
				比书面文档更有效，频繁交付的版本
				更好适应需求变化的代码表写和团队组织方法，注重软件开发中人的作用
	d.自动化测试优点
		回归测试更方便(程序修改频繁，效果明显)
		运行更繁琐的测试(较少时间运行较多测试)
		执行一些手动测试困难或者不能进行的测试(大用户量，不能有足够的人员测试，可以通过自动化模拟多个用户)
		更好的利用资源
		测试具有一致性和重复性
	e.自动化测试的缺点
		不能替代手工测试
		手工测试比自动化测试发现缺陷更多，自动化测试不容易发现新bug
		对测试质量依赖性比较大：自动化测试正常运行前，需要先通过功能测试
		自动化测试可能会制约某些软件
		自动化测试和手工测试一起使用
2.主流测试框架
	QTP、UFT
	selenium
	robot framework
3.selenium的特点
	开源、免费
	多浏览器支持 firefox chrome ie opera safari
	多平台支持    linux  windows unix
	多语言支持    JAVA python ruby perl php c# js
	对web页面有良好支持
	简单(API)，灵活(开发语言驱动)
	支持分布式测试用例执行
4.selenium家族
	selenium (框架)
	selenium IDE(集成开发环境)
	selenium webdriver(重要)
	selenium Grid(分布式自动化测试工具)
5.webdriver驱动原理
	大概过程:执行脚本，webdriver会启动一个新的线程去启动一个浏览器，浏览器可以理解为服务器，脚本为客户端，通过脚本操作浏览器，脚本发送一个请求给浏览器，浏览器处理后返回给脚本
	webdriver三个角色:
		1.自动化测试代码
		2.浏览器的驱动
		3.浏览器
5.css定位
	a.单一属性定位
		a1.标签选择器
		a2.id选择器
		a3.class选择器
		a4.其他属性定位
	b.组合属性定位
		b1.id组合属性定位
		b2.class组合属性定位
		b3.其他属性组合定位
		b4.只有属性名，没有值
		b5.两个其他属性组合
		b6.模糊属性定位
	c.层级定位
6.框架切换
	1.主文档切换到frame中(switch_to.frame函数)
		switch_to.frame()中填写框架的id或者名字(通常用id)
	2.从frame切换到主文档
		switch_to.default_content()
	3.嵌套frame操作
		开发时候会出现嵌套的frame
		1>主文档切换到frame2，一层一层进入
			br.switch_to.frame(frame1)
			br.switch_to.frame(frame2)
		2>子frame切换到父frame
			相当于后退方法，随意切换
			br.parent_frame()
			如果当前已经是主文档，无效
		3>总结
			switch_to.frame()                 进入frame
			switch_to.default_content()       返回主文档
			switch_to.parent_frame()          返回上一层frame
7.xpath定位
	xpath语法参考w3school
	针对于xml路径的语言，通过元素的路径来找到这个元素
	1.工具
		浏览器
		F12
	2.用法
		/   绝对路径，从根节点获取元素
		//  相对路径，所有子节点中搜索对应元素
		@   选取属性
		.   当前节点
		..  当前节点的父节点
		可以通过F12中的$x()进行调试
		1>xpath支持id、class、name定位功能
			$x("//*[@id='kw']")
			$x("//input[@class='s_ipt']")
			$x("//*[@name='wd']")
		2>如果没有id、class、name属性，xpath支持其他属性定位
			$x("//*[@autocomplete]")
			$x("//*[@autocomplete='off']")
		3>通过层级关系定位元素
			a.通过相对路径定位元素
			b.通过绝对路径定位元素
				$x("/html/body/div[1]/div[1]/div[3]/a[4]")
		4>xpath运算符
			and  同时满足多个条件
			or   满足一个条件即可
			$x("//*[@target='_blank' and @href='http://tieba.baidu.com'] ")
8.ecshop环境搭建
	win:
		1.集成环境
			xampp(a:apache  m:mysql p:php perl  x:任意操作系统)
			wamp (w:windows )
			phpstudy
		2.常见搭配
			win+apache+mysql
			win+iis+sqlserver
			linux+apache+mysql
			linux+nginx+mysql
		3.phpstudy(phpstudy 2016)
			a.安装(傻瓜安装)
			b.文件夹简介
				apache  web服务器
					bin  存放命令
					conf 存放配置
					logs 存放日志
					httpd.conf apache的配置文件
				mysql   数据库服务器
					bin   存放命令
					data  存放数据的位置
					my.ini  mysql的配置文件
				WWW
					项目所在文件夹
		4.服务的启动
			apache 的主服务 httpd  端口:80
			mysql的主服务  mysqld  端口:3306
			1>查看进程
				win+r--cmd--tasklist | find "httpd"
				tasklist  查看系统中所有进程
				|         管道，前面的输出作为后面的输入
				find      搜索
			2>查看端口
				netstat -an | find "3306"
		5.复制ecshop文件夹到WWW文件夹中
		6.浏览器中输入127.0.0.1/ecshop1,按照提示安装
				配置系统注意
				1.数据库用户名root
				2.密码       root
				3.数据库名   test
				注意:密码不要以数字开头






